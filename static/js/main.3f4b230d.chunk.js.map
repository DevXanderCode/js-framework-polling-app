{"version":3,"sources":["reducers/index.js","App.js","actions/index.js","components/Result.js","serviceWorker.js","index.js"],"names":["initialState","angular","react","vuejs","App","props","handleVoteAngular","store","dispatch","type","handleVoteReact","handleVoteVuejs","className","src","alt","style","borderRadius","margin","alignItems","width","height","onClick","this","Component","Result","getState","votesAngularInPercent","backgroundColor","votesReactInPercent","votesVuejsInPercent","toFixed","votesAngularInPercentStyle","votesReactInPercentStyle","votesVuejsInPercentStyle","Boolean","window","location","hostname","match","createStore","state","action","console","log","Object","assign","render","ReactDOM","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3f4b230d.chunk.js","sourcesContent":["const initialState = {\r\n  angular: 0,\r\n  react: 0,\r\n  vuejs: 0,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"VOTE_ANGULAR\":\r\n      console.log(\"voted Angular\");\r\n      return Object.assign({}, state, {\r\n        angular: state.angular + 1,\r\n      });\r\n    case \"VOTE_REACT\":\r\n      console.log(\"voted react\");\r\n      return Object.assign({}, state, {\r\n        react: state.react + 1,\r\n      });\r\n    case \"VOTE_VUEJS\":\r\n      console.log(\"voted vue\");\r\n      return Object.assign({}, state, {\r\n        vuejs: state.vuejs + 1,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\nimport { voteAngular, voteReact, voteVuejs } from \"./actions\";\nimport \"./bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.store = this.props.store;\n  }\n\n  handleVoteAngular = () => {\n    this.store.dispatch(voteAngular());\n  };\n\n  handleVoteReact = () => {\n    this.store.dispatch(voteReact());\n  };\n\n  handleVoteVuejs = () => {\n    this.store.dispatch(voteVuejs());\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotron text-center\">\n          <img src=\"select.png\" alt=\"pics\" style={{ borderRadius: \"50%\" }} />\n          <h2>\n            what is your favourite javaScript front-end framework/library ?\n          </h2>\n          <h4>click on the logo below to vote</h4>\n          <br />\n          <div\n            className=\"row col-10\"\n            style={{ margin: \"0 auto\", alignItems: \"center\" }}\n          >\n            <div className=\"col-lg-4 my-4\">\n              <img\n                src=\"angular.png\"\n                alt=\"angular_Logo\"\n                width=\"140px\"\n                height=\"140px\"\n                onClick={this.handleVoteAngular}\n                className=\"c-pointer\"\n              />\n            </div>\n            <div className=\"col-lg-4 my-4\">\n              <img\n                src=\"react.png\"\n                alt=\"react_Logo\"\n                onClick={this.handleVoteReact}\n                width=\"140px\"\n                height=\"140px\"\n                className=\"c-pointer\"\n              />\n            </div>\n            <div className=\"col-lg-4 my-4\">\n              <img\n                src=\"vue.png\"\n                alt=\"vuejs_Logo\"\n                width=\"140px\"\n                height=\"140px\"\n                onClick={this.handleVoteVuejs}\n                className=\"c-pointer\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const voteReact = () => {\r\n  return {\r\n    type: \"VOTE_REACT\",\r\n  };\r\n};\r\n\r\nexport const voteAngular = () => {\r\n  return {\r\n    type: \"VOTE_ANGULAR\",\r\n  };\r\n};\r\n\r\nexport const voteVuejs = () => {\r\n  return {\r\n    type: \"VOTE_VUEJS\",\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nclass Result extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.store = this.props.store;\r\n  }\r\n\r\n  votesAngularInPercent() {\r\n    if (this.store.getState().angular) {\r\n      return (\r\n        (this.store.getState().angular /\r\n          (this.store.getState().angular +\r\n            this.store.getState().react +\r\n            this.store.getState().vuejs)) *\r\n        100\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  votesReactInPercent() {\r\n    if (this.store.getState().react) {\r\n      return (\r\n        (this.store.getState().react /\r\n          (this.store.getState().angular +\r\n            this.store.getState().react +\r\n            this.store.getState().vuejs)) *\r\n        100\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  votesVuejsInPercent() {\r\n    if (this.store.getState().vuejs) {\r\n      return (\r\n        (this.store.getState().vuejs /\r\n          (this.store.getState().angular +\r\n            this.store.getState().react +\r\n            this.store.getState().vuejs)) *\r\n        100\r\n      );\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  votesAngularInPercentStyle() {\r\n    return {\r\n      width: this.votesAngularInPercent() + \"%\",\r\n      backgroundColor: \"#dc3545\",\r\n    };\r\n  }\r\n  votesReactInPercentStyle() {\r\n    return {\r\n      width: this.votesReactInPercent() + \"%\",\r\n      backgroundColor: \"#0062cc\",\r\n    };\r\n  }\r\n  votesVuejsInPercentStyle() {\r\n    return {\r\n      width: this.votesVuejsInPercent() + \"%\",\r\n      backgroundColor: \"#28a745\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"label label-padding bg-danger px-1 my-1\">\r\n          Angular: {this.votesAngularInPercent().toFixed(2) + \"%\"}\r\n        </span>\r\n        <div className=\"progress active my-1\">\r\n          <div\r\n            className=\"progress-bar progress-bar-danger progress-bar-striped\"\r\n            style={this.votesAngularInPercentStyle()}\r\n          ></div>\r\n        </div>\r\n        <span className=\"label label-padding bg-primary px-1\">\r\n          React: {this.votesReactInPercent().toFixed(2) + \"%\"}\r\n        </span>\r\n        <div className=\"progress active my-1\">\r\n          <div\r\n            className=\"progress-bar progress-bar-striped progress-bar-primary\"\r\n            style={this.votesReactInPercentStyle()}\r\n          ></div>\r\n        </div>\r\n        <span className=\"label bg-success px-1\">\r\n          Vue.js: {this.votesVuejsInPercent().toFixed(2) + \"%\"}\r\n        </span>\r\n        <div className=\"progress active my-1\">\r\n          <div\r\n            className=\"progress-bar progress-bar-striped progress-bar-success\"\r\n            style={this.votesVuejsInPercentStyle()}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Result from \"./components/Result\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet store = createStore(reducer);\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App store={store} />\n      <hr />\n      <Result store={store} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n\nstore.subscribe(render);\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}